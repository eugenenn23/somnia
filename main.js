// –ù–æ–≤–∏–π main.js ‚Äî —É–Ω—ñ–∫–∞–ª—å–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–µ–Ω—é

import chalk from 'chalk';
import { prompt } from '@inquirer/prompts';

// –Ü–º–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥ –∑ –Ω–æ–≤–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏ –∑–º—ñ–Ω–Ω–∏—Ö
import { runErc20Deploy } from './commands/cmdDeployErc20.js';
import { runErc721Deploy } from './commands/cmdDeployErc721.js';
import { quitApp } from './commands/cmdExit.js';
import { grabTokensFromFaucet } from './commands/cmdGetSttFromFaucet.js';
import { transferTokensRandomly } from './commands/cmdSendSttToRandomAddress.js';
import { refreshWalletsSheet } from './commands/xlsx/cmdCreateOrUpdateWalletsTable.js';
import { turnAllOff } from './commands/xlsx/cmdOffAll.js';
import { disableEmptyWallets } from './commands/xlsx/cmdOffZeroBalance.js';
import { enableAllWallets } from './commands/xlsx/cmdOnAll.js';
import { enableEmptyWallets } from './commands/xlsx/cmdOnZeroBalance.js';

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–µ–Ω—é —É –≤–∏–≥–ª—è–¥—ñ Map
const actions = new Map([
    ['1', { label: 'üìä –û–Ω–æ–≤–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –≥–∞–º–∞–Ω—Ü—ñ–≤', run: refreshWalletsSheet }],
    ['2', { label: 'üîì –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≥–∞–º–∞–Ω—Ü—ñ –∑ –Ω—É–ª—å–æ–≤–∏–º –±–∞–ª–∞–Ω—Å–æ–º', run: enableEmptyWallets }],
    ['3', { label: 'üîí –í–∏–º–∫–Ω—É—Ç–∏ –≥–∞–º–∞–Ω—Ü—ñ –∑ –Ω—É–ª—å–æ–≤–∏–º –±–∞–ª–∞–Ω—Å–æ–º', run: disableEmptyWallets }],
    ['4', { label: 'üü¢ –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≤—Å—ñ –≥–∞–º–∞–Ω—Ü—ñ', run: enableAllWallets }],
    ['5', { label: 'üî¥ –í–∏–º–∫–Ω—É—Ç–∏ –≤—Å—ñ –≥–∞–º–∞–Ω—Ü—ñ', run: turnAllOff }],
    ['6', { label: 'üíß –û—Ç—Ä–∏–º–∞—Ç–∏ STT –∑ Faucet', run: grabTokensFromFaucet }],
    ['7', { label: 'üé≤ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ STT –Ω–∞ –≤–∏–ø–∞–¥–∫–æ–≤—É –∞–¥—Ä–µ—Å—É', run: transferTokensRandomly }],
    ['8', { label: 'üìù –î–µ–ø–ª–æ–π ERC-20 –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É', run: runErc20Deploy }],
    ['9', { label: 'üñº –î–µ–ø–ª–æ–π ERC-721 –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É', run: runErc721Deploy }],
    ['0', { label: 'üö™ –í–∏—Ö—ñ–¥', run: quitApp }],
]);

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
export async function startApp() {
    console.clear();
    console.log(
        chalk.cyanBright('\n=== Somnia CLI Bot ===\n')
    );

    for (const [key, cmd] of actions) {
        console.log(`${chalk.yellow(key)} - ${cmd.label}`);
    }

    const choice = await prompt({ type: 'input', message: '–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', name: 'option' });
    const selected = actions.get(choice.option?.trim());

    if (!selected) {
        console.log(chalk.red('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.'));
        return startApp();
    }

    await selected.run();
    await startApp();
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
startApp();
